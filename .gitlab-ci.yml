image: docker:git
services:   
  - docker:dind

variables:
  #DOCKER_TLS_CERTDIR: /certs
  #DOCKER_DRIVER: overlay2
  #DOCKER_HOST: tcp://docker:2375/
  BUILDPLATFORM: "linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6"
  DOCKER_BUILDX_ARCH: "amd64"
  DOCKERFILE_PATH: "Dockerfile"

before_script:
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
  # https://docs.gitlab.com/ce/ci/variables/predefined_variables.html
  - export BUILD_DATE=$(date -u +%Y%m%d-%H%M%S)
  - export DOCKER_IMAGE_VERSION=${BUILD_DATE}.${CI_COMMIT_SHORT_SHA}
  # buildx for multiarch images, read more: https://github.com/Tob1as/docker-build-example and https://www.docker.com/blog/multi-arch-build-what-about-gitlab-ci/
  # install buildx:
  #- export DOCKER_BUILDX_VERSION=$(wget -qO- https://api.github.com/repos/docker/buildx/releases/latest | grep 'tag_name' | cut -d\" -f4 | sed 's/[^0-9.]//g')
  #- mkdir -p /usr/lib/docker/cli-plugins
  #- wget "https://github.com/docker/buildx/releases/download/v${DOCKER_BUILDX_VERSION}/buildx-v${DOCKER_BUILDX_VERSION}.linux-${DOCKER_BUILDX_ARCH}" -O /usr/lib/docker/cli-plugins/docker-buildx
  #- chmod a+x /usr/lib/docker/cli-plugins/docker-buildx
  # need binfmt-support and qemu-user-static:
  #- docker run --rm --privileged tonistiigi/binfmt --install all
  # docker buildx settings:
  - docker context create tls-environment
  - docker buildx create --name multiarchbuilder --use tls-environment
  #- docker buildx ls

stages:
  - docker

docker-build:
  stage: docker
  #tags:     
  #  - docker
  script:
    # build images and push to registry:
    - docker buildx build --build-arg BUILD_DATE="${BUILD_DATE}" --build-arg VCS_REF="${CI_COMMIT_SHORT_SHA}" --tag "${CI_REGISTRY_IMAGE}:${DOCKER_IMAGE_VERSION}" --tag "${CI_REGISTRY_IMAGE}:latest" --platform "${BUILDPLATFORM}" --file "${DOCKERFILE_PATH}" --push .
  only:
    refs:
    #  - tags
      - schedules
    #  - master
    #  - main
    #changes:
    #  - .gitlab-ci.yml
    #  - Dockerfile
    #  - app/*

after_script:
  - docker logout "$CI_REGISTRY"
